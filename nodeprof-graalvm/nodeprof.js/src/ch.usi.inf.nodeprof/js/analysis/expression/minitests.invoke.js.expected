declarePre name=foo, type=var
literal: literalType=FunctionLiteral
statement finishes: (src/ch.usi.inf.nodeprof.test/js/minitests/invoke.js:16:1:16:19) stmt: FunctionDeclaration
write (src/ch.usi.inf.nodeprof.test/js/minitests/invoke.js:16:1:16:19) foo
expression starts: (src/ch.usi.inf.nodeprof.test/js/minitests/invoke.js:17:1:17:15) type: CallN
expression starts: (src/ch.usi.inf.nodeprof.test/js/minitests/invoke.js:17:1:17:4) type: JSReadCurrentFrameSlot
expression finishes: (src/ch.usi.inf.nodeprof.test/js/minitests/invoke.js:17:1:17:4) type: JSReadCurrentFrameSlot
expression starts: (src/ch.usi.inf.nodeprof.test/js/minitests/invoke.js:17:5:17:7) type: JSConstantInteger
expression finishes: (src/ch.usi.inf.nodeprof.test/js/minitests/invoke.js:17:5:17:7) type: JSConstantInteger
expression starts: (src/ch.usi.inf.nodeprof.test/js/minitests/invoke.js:17:9:17:14) type: JSConstantString
expression finishes: (src/ch.usi.inf.nodeprof.test/js/minitests/invoke.js:17:9:17:14) type: JSConstantString
expression finishes: (src/ch.usi.inf.nodeprof.test/js/minitests/invoke.js:17:1:17:15) type: CallN
statement finishes: (src/ch.usi.inf.nodeprof.test/js/minitests/invoke.js:17:1:17:15) stmt: CallN
Statements in lines: [ 16, 17 ]
